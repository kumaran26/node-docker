name: github action demo

on: #[pull_request]
  push:
    branches:
    - 'master'

permissions:
  contents: read
  id-token: 'write'

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:

    - name: code checkout
      uses: actions/checkout@v2

    - id: auth
      uses: google-github-actions/auth@v2.0.0  
      with:
        workload_identity_provider: 'projects/71512088213/locations/global/workloadIdentityPools/git-wif-new-pool/providers/github-new'
        service_account: 'git-wif-new-service@my-react-project-97ea7.iam.gserviceaccount.com'

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Docker Check
      run: docker --version

    - name: GCP version 
      run: gcloud -v

    - name: GCP login 
      run: gcloud auth configure-docker europe-west4-docker.pkg.dev

    - name: Docker Build
      run: docker buildx build --platform linux/amd64 -t node-app-action:1.0 .

    - name: Docker Tag
      run: docker tag node-app-action:1.0 europe-west4-docker.pkg.dev/my-react-project-97ea7/docker-cloud/node-hello:${{github.sha}}

    - name: Docker Push
      run: docker push europe-west4-docker.pkg.dev/my-react-project-97ea7/docker-cloud/node-hello:${{github.sha}}

    - name: Deploy to cloudrun
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: node-app-new
        flags: '--port=5004 --allow-unauthenticated'
        image: europe-west4-docker.pkg.dev/my-react-project-97ea7/docker-cloud/node-hello:${{github.sha}}

    - name: Terraform Init
      run: terraform init


    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false


    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false